<?php

/**
 * BaseTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Posts
 * @property Doctrine_Collection $Images
 * @property Doctrine_Collection $PostTag
 * @property Doctrine_Collection $ImageTag
 * 
 * @method integer             getId()       Returns the current record's "id" value
 * @method string              getName()     Returns the current record's "name" value
 * @method Doctrine_Collection getPosts()    Returns the current record's "Posts" collection
 * @method Doctrine_Collection getImages()   Returns the current record's "Images" collection
 * @method Doctrine_Collection getPostTag()  Returns the current record's "PostTag" collection
 * @method Doctrine_Collection getImageTag() Returns the current record's "ImageTag" collection
 * @method Tag                 setId()       Sets the current record's "id" value
 * @method Tag                 setName()     Sets the current record's "name" value
 * @method Tag                 setPosts()    Sets the current record's "Posts" collection
 * @method Tag                 setImages()   Sets the current record's "Images" collection
 * @method Tag                 setPostTag()  Sets the current record's "PostTag" collection
 * @method Tag                 setImageTag() Sets the current record's "ImageTag" collection
 * 
 * @package    tdf
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Post as Posts', array(
             'refClass' => 'PostTag',
             'local' => 'tag_id',
             'foreign' => 'post_id'));

        $this->hasMany('Image as Images', array(
             'refClass' => 'ImageTag',
             'local' => 'tag_id',
             'foreign' => 'image_id'));

        $this->hasMany('PostTag', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $this->hasMany('ImageTag', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}