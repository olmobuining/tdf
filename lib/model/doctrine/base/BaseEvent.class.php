<?php

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $description
 * @property integer $start
 * @property integer $points
 * @property integer $end
 * @property integer $pre
 * @property integer $max_myCharacters
 * @property integer $min_level_requirement
 * @property boolean $approval_needed
 * @property boolean $guild_event
 * @property boolean $alliance_event
 * @property integer $user_id
 * @property User $User
 * @property Doctrine_Collection $myCharacters
 * @property Doctrine_Collection $EventmyCharacters
 * @property Doctrine_Collection $Extras
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method string              getName()                  Returns the current record's "name" value
 * @method clob                getDescription()           Returns the current record's "description" value
 * @method integer             getStart()                 Returns the current record's "start" value
 * @method integer             getPoints()                Returns the current record's "points" value
 * @method integer             getEnd()                   Returns the current record's "end" value
 * @method integer             getPre()                   Returns the current record's "pre" value
 * @method integer             getMaxMyCharacters()       Returns the current record's "max_myCharacters" value
 * @method integer             getMinLevelRequirement()   Returns the current record's "min_level_requirement" value
 * @method boolean             getApprovalNeeded()        Returns the current record's "approval_needed" value
 * @method boolean             getGuildEvent()            Returns the current record's "guild_event" value
 * @method boolean             getAllianceEvent()         Returns the current record's "alliance_event" value
 * @method integer             getUserId()                Returns the current record's "user_id" value
 * @method User                getUser()                  Returns the current record's "User" value
 * @method Doctrine_Collection getMyCharacters()          Returns the current record's "myCharacters" collection
 * @method Doctrine_Collection getEventmyCharacters()     Returns the current record's "EventmyCharacters" collection
 * @method Doctrine_Collection getExtras()                Returns the current record's "Extras" collection
 * @method Event               setId()                    Sets the current record's "id" value
 * @method Event               setName()                  Sets the current record's "name" value
 * @method Event               setDescription()           Sets the current record's "description" value
 * @method Event               setStart()                 Sets the current record's "start" value
 * @method Event               setPoints()                Sets the current record's "points" value
 * @method Event               setEnd()                   Sets the current record's "end" value
 * @method Event               setPre()                   Sets the current record's "pre" value
 * @method Event               setMaxMyCharacters()       Sets the current record's "max_myCharacters" value
 * @method Event               setMinLevelRequirement()   Sets the current record's "min_level_requirement" value
 * @method Event               setApprovalNeeded()        Sets the current record's "approval_needed" value
 * @method Event               setGuildEvent()            Sets the current record's "guild_event" value
 * @method Event               setAllianceEvent()         Sets the current record's "alliance_event" value
 * @method Event               setUserId()                Sets the current record's "user_id" value
 * @method Event               setUser()                  Sets the current record's "User" value
 * @method Event               setMyCharacters()          Sets the current record's "myCharacters" collection
 * @method Event               setEventmyCharacters()     Sets the current record's "EventmyCharacters" collection
 * @method Event               setExtras()                Sets the current record's "Extras" collection=
 * 
 * @package    tdf
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 25, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('start', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('points', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('end', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('pre', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('max_myCharacters', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('min_level_requirement', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('approval_needed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('guild_event', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('alliance_event', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('myCharacter as myCharacters', array(
             'refClass' => 'EventmyCharacter',
             'local' => 'event_id',
             'foreign' => 'mycharacter_id'));

        $this->hasMany('EventmyCharacter as EventmyCharacters', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('Extra as Extras=', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}