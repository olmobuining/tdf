<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $email
 * @property integer $rank_id
 * @property integer $permission_id
 * @property string $first_name
 * @property string $last_name
 * @property integer $birthdate
 * @property integer $points
 * @property string $reset_token
 * @property Rank $Rank
 * @property Permission $Permission
 * @property Doctrine_Collection $Posts
 * @property Doctrine_Collection $Images
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $myCharacters
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $Adminlogs
 * @property Doctrine_Collection $Extras
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getUsername()      Returns the current record's "username" value
 * @method string              getPassword()      Returns the current record's "password" value
 * @method string              getEmail()         Returns the current record's "email" value
 * @method integer             getRankId()        Returns the current record's "rank_id" value
 * @method integer             getPermissionId()  Returns the current record's "permission_id" value
 * @method string              getFirstName()     Returns the current record's "first_name" value
 * @method string              getLastName()      Returns the current record's "last_name" value
 * @method integer             getBirthdate()     Returns the current record's "birthdate" value
 * @method integer             getPoints()        Returns the current record's "points" value
 * @method string              getResetToken()    Returns the current record's "reset_token" value
 * @method Rank                getRank()          Returns the current record's "Rank" value
 * @method Permission          getPermission()    Returns the current record's "Permission" value
 * @method Doctrine_Collection getPosts()         Returns the current record's "Posts" collection
 * @method Doctrine_Collection getImages()        Returns the current record's "Images" collection
 * @method Doctrine_Collection getComments()      Returns the current record's "Comments" collection
 * @method Doctrine_Collection getMyCharacters()  Returns the current record's "myCharacters" collection
 * @method Doctrine_Collection getEvents()        Returns the current record's "Events" collection
 * @method Doctrine_Collection getAdminlogs()     Returns the current record's "Adminlogs" collection
 * @method Doctrine_Collection getExtras()        Returns the current record's "Extras" collection
 * @method User                setId()            Sets the current record's "id" value
 * @method User                setUsername()      Sets the current record's "username" value
 * @method User                setPassword()      Sets the current record's "password" value
 * @method User                setEmail()         Sets the current record's "email" value
 * @method User                setRankId()        Sets the current record's "rank_id" value
 * @method User                setPermissionId()  Sets the current record's "permission_id" value
 * @method User                setFirstName()     Sets the current record's "first_name" value
 * @method User                setLastName()      Sets the current record's "last_name" value
 * @method User                setBirthdate()     Sets the current record's "birthdate" value
 * @method User                setPoints()        Sets the current record's "points" value
 * @method User                setResetToken()    Sets the current record's "reset_token" value
 * @method User                setRank()          Sets the current record's "Rank" value
 * @method User                setPermission()    Sets the current record's "Permission" value
 * @method User                setPosts()         Sets the current record's "Posts" collection
 * @method User                setImages()        Sets the current record's "Images" collection
 * @method User                setComments()      Sets the current record's "Comments" collection
 * @method User                setMyCharacters()  Sets the current record's "myCharacters" collection
 * @method User                setEvents()        Sets the current record's "Events" collection
 * @method User                setAdminlogs()     Sets the current record's "Adminlogs" collection
 * @method User                setExtras()        Sets the current record's "Extras" collection
 * 
 * @package    tdf
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('username', 'string', 100, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'email' => true,
             'length' => 255,
             ));
        $this->hasColumn('rank_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('permission_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('first_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('last_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('birthdate', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('points', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('reset_token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Rank', array(
             'local' => 'rank_id',
             'foreign' => 'id'));

        $this->hasOne('Permission', array(
             'local' => 'permission_id',
             'foreign' => 'id'));

        $this->hasMany('Post as Posts', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Image as Images', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('myCharacter as myCharacters', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Event as Events', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('AdminLog as Adminlogs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Extra as Extras', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'username',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}