<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $text
 * @property integer $created_at
 * @property integer $post_id
 * @property integer $image_id
 * @property User $User
 * @property Post $Post
 * @property Image $Image
 * 
 * @method integer getId()         Returns the current record's "id" value
 * @method integer getUserId()     Returns the current record's "user_id" value
 * @method string  getText()       Returns the current record's "text" value
 * @method integer getCreatedAt()  Returns the current record's "created_at" value
 * @method integer getPostId()     Returns the current record's "post_id" value
 * @method integer getImageId()    Returns the current record's "image_id" value
 * @method User    getUser()       Returns the current record's "User" value
 * @method Post    getPost()       Returns the current record's "Post" value
 * @method Image   getImage()      Returns the current record's "Image" value
 * @method Comment setId()         Sets the current record's "id" value
 * @method Comment setUserId()     Sets the current record's "user_id" value
 * @method Comment setText()       Sets the current record's "text" value
 * @method Comment setCreatedAt()  Sets the current record's "created_at" value
 * @method Comment setPostId()     Sets the current record's "post_id" value
 * @method Comment setImageId()    Sets the current record's "image_id" value
 * @method Comment setUser()       Sets the current record's "User" value
 * @method Comment setPost()       Sets the current record's "Post" value
 * @method Comment setImage()      Sets the current record's "Image" value
 * 
 * @package    tdf
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('text', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('created_at', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('post_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('image_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id'));

        $this->hasOne('Image', array(
             'local' => 'image_id',
             'foreign' => 'id'));
    }
}